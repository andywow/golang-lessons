version: '3.7'

services:

  db:
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    image: "postgres:12.2-alpine"
    networks:
      dbnet:
        aliases:
        - db
    ports:
    - "5432:5432"
    volumes:
    - "${POSTGRES_VOL}:/var/lib/postgresql/data"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  dbexporter:
    depends_on:
    - db
    environment:
    - DATA_SOURCE_NAME=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres?sslmode=disable
    image: "wrouesnel/postgres_exporter:latest"
    networks:
      dbnet:
      svcnet:
        aliases:
        - dbexporter
    ports:
    - "9187:9187"
    volumes:
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  mq:
    image: "rabbitmq:3-management"
    networks:
      mqnet:
        aliases: 
        - mq
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
    - "${RABBITMQ_VOL}:/var/lib/rabbitmq"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  dbmigrate:
    command:
    - -path=/migrations
    - -database
    - postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres?sslmode=disable&connect_timeout=30&x-migrations-table=migrate
    - up
    depends_on:
    - db
    image: "migrate/migrate:latest"
    networks:
    - dbnet
    volumes:
    - "./sql:/migrations"  
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  apiserver:
    build:
      context: .
      dockerfile: deploy/apiserver/Dockerfile
    depends_on:
    - db
    - dbmigrate
    ports:
    - "8888:9090"
    - "8080:8080"
    networks:
      dbnet:
      svcnet:
        aliases:
        - apiserver
    volumes:
    - "${CONFIG_PATH}:/app/config.yaml:ro"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  scheduler:
    build:
      context: .
      dockerfile: deploy/scheduler/Dockerfile
    depends_on:
    - db
    - dbmigrate
    - mq
    networks:
      dbnet:
      mqnet:
      svcnet:
        aliases:
        - scheduler
    volumes:
    - "${CONFIG_PATH}:/app/config.yaml:ro"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  sender:
    build:
      context: .
      dockerfile: deploy/sender/Dockerfile
    depends_on:
    - mq
    networks:
      mqnet:
      svcnet:
        aliases:
        - sender
    ports:
    - "8081:8080"
    volumes:
    - "${CONFIG_PATH}:/app/config.yaml:ro"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

  prometheus:
    command:
    - --config.file
    - /etc/prometheus.yml
    image: "prom/prometheus:v2.17.1"
    networks:
      svcnet:
    ports:
    - "9090:9090"
    volumes:
    - "./deploy/prometheus/prometheus.yml:/etc/prometheus.yml:ro"
    - "${LOCALTIME_PATH}:/etc/localtime:ro"

networks:
  dbnet:
  mqnet:
  svcnet:
